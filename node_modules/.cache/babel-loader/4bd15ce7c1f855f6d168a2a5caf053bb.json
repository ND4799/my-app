{"ast":null,"code":"var _jsxFileName = \"/Users/rexzhang/github/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\n//import React from 'react';\nimport React, { useState } from 'react';\nimport { Button, DatePicker, Space, Table, Tag } from 'antd';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // 声明一个新的叫做 “count” 的 state 变量\n  const [count, setCount] = useState(0);\n  const data = [{\n    key: '1',\n    name: 'John Brown1',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n    link: 'www.qq.com'\n  }, {\n    key: '2',\n    name: 'Jim Green2',\n    age: 42,\n    address: 'London No. 2 Lake Park',\n    tags: ['loser'],\n    link: 'xw.qq.com'\n  }, {\n    key: '3',\n    name: 'Joe Black3',\n    age: 32,\n    address: 'Sidney No. 3 Lake Park',\n    tags: ['cool', 'teacher'],\n    link: '1.qq.com'\n  }, {\n    key: '4',\n    name: 'tom3',\n    age: 32,\n    address: 'Sidney No. 3 Lake Park',\n    tags: ['cool', 'teacher'],\n    link: '2.qq.com'\n  }, {\n    key: '5',\n    name: 'jerry3',\n    age: 32,\n    address: 'Sidney No. 3 Lake Park',\n    tags: ['cool', 'teacher'],\n    link: '3.qq.com'\n  }];\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age'\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address'\n  }, {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: tags.map(tag => {\n        let color = tag.length > 5 ? 'geekblue' : 'green';\n\n        if (tag === 'loser') {\n          color = 'yellow';\n        }\n\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          color: color,\n          children: tag.toUpperCase()\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false)\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\"Invite \", record.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }];\n  const arr = ['1文字文字文字', '2文字文字文字', '33333333333文字文字文字', '4文字文字文字', '35文字文字文字', '36文字文字文字'];\n  const lists = data.map(porps => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: porps.link,\n      children: porps.name + ' ' + porps.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        children: \"PRESS button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"dashed\",\n        children: \"dashed button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"text\",\n        children: \"text button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        children: \"link button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        placeholder: \"select date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You clicked \", count, \" times\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 10),\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: lists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rexzhang/github/my-app/src/App.js"],"names":["React","useState","Button","DatePicker","Space","Table","Tag","render","App","count","setCount","data","key","name","age","address","tags","link","columns","title","dataIndex","text","map","tag","color","length","toUpperCase","record","arr","lists","porps"],"mappings":"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","sourcesContent":["//import React from 'react';\nimport React, { useState } from 'react';\nimport { Button, DatePicker, Space, Table, Tag} from 'antd';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { render } from 'react-dom';\n\nconst App = () => {\n  // 声明一个新的叫做 “count” 的 state 变量\n  const [count, setCount] = useState(0);\n  const data = [\n    {\n      key: '1',\n      name: 'John Brown1',\n      age: 32,\n      address: 'New York No. 1 Lake Park',\n      tags: ['nice', 'developer'],\n      link:'www.qq.com',\n    },\n    {\n      key: '2',\n      name: 'Jim Green2',\n      age: 42,\n      address: 'London No. 2 Lake Park',\n      tags: ['loser'],\n      link:'xw.qq.com',\n    },\n    {\n      key: '3',\n      name: 'Joe Black3',\n      age: 32,\n      address: 'Sidney No. 3 Lake Park',\n      tags: ['cool', 'teacher'],\n      link:'1.qq.com',\n    },\n    {\n      key: '4',\n      name: 'tom3',\n      age: 32,\n      address: 'Sidney No. 3 Lake Park',\n      tags: ['cool', 'teacher'],\n      link:'2.qq.com',\n    },\n    {\n      key: '5',\n      name: 'jerry3',\n      age: 32,\n      address: 'Sidney No. 3 Lake Park',\n      tags: ['cool', 'teacher'],\n      link:'3.qq.com',\n    },\n  ];\n  const columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  },\n  {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n  },\n  {\n    title: 'Tags',\n    key: 'tags',\n    dataIndex: 'tags',\n    render: tags => (\n      <>\n        {tags.map(tag => {\n          let color = tag.length > 5 ? 'geekblue' : 'green';\n          if (tag === 'loser') {\n            color = 'yellow';\n          }\n          return (\n            <Tag color={color} key={tag}>\n              {tag.toUpperCase()}\n            </Tag>\n          );\n        })}\n      </>\n    ),\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => (\n      <Space size=\"middle\">\n        <a>Invite {record.name}</a>\n        <a>Delete</a>\n      </Space>\n    ),\n  },\n  ];\n  const arr = ['1文字文字文字','2文字文字文字','33333333333文字文字文字','4文字文字文字','35文字文字文字','36文字文字文字']\n  const lists = data.map((porps) => \n    <li><a href={porps.link}>{porps.name + ' ' + porps.address}</a></li>\n  )\n  \n  return(\n    <>\n      <Space>\n        <Button type=\"primary\">PRESS button</Button>\n        <Button type=\"dashed\">dashed button</Button>\n        <Button type=\"text\">text button</Button>\n        <Button type=\"link\">link button</Button>\n        <DatePicker placeholder=\"select date\" />\n      </Space>\n      <div>\n        <p>You clicked {count} times</p>\n        <button onClick={() => setCount(count + 10)}>\n          Click me\n        </button>\n      </div>\n      <Table columns={columns} dataSource={data} />\n      <ul>{lists}</ul>\n    </>\n)\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}